//------------------------------------------------------------------------------
// <auto-generated>
//     Этот код создан по шаблону.
//
//     Изменения, вносимые в этот файл вручную, могут привести к непредвиденной работе приложения.
//     Изменения, вносимые в этот файл вручную, будут перезаписаны при повторном создании кода.
// </auto-generated>
//------------------------------------------------------------------------------

namespace WebApplication6.Models
{
    using System;
    using System.Data.Entity;
    using System.Data.Entity.Infrastructure;
    using System.Data.Entity.Core.Objects;
    using System.Linq;
    
    public partial class labEntities : DbContext
    {
        public labEntities()
            : base("name=labEntities")
        {
        }
    
        protected override void OnModelCreating(DbModelBuilder modelBuilder)
        {
            throw new UnintentionalCodeFirstException();
        }
    
        public virtual DbSet<admin> admin { get; set; }
        public virtual DbSet<podr> podr { get; set; }
        public virtual DbSet<requests> requests { get; set; }
        public virtual DbSet<status_req> status_req { get; set; }
        public virtual DbSet<users> users { get; set; }
    
        public virtual ObjectResult<Запрос1_Result> Запрос1(Nullable<int> id_admin, Nullable<int> id_status, Nullable<System.DateTime> time1, Nullable<System.DateTime> time2)
        {
            var id_adminParameter = id_admin.HasValue ?
                new ObjectParameter("id_admin", id_admin) :
                new ObjectParameter("id_admin", typeof(int));
    
            var id_statusParameter = id_status.HasValue ?
                new ObjectParameter("id_status", id_status) :
                new ObjectParameter("id_status", typeof(int));
    
            var time1Parameter = time1.HasValue ?
                new ObjectParameter("time1", time1) :
                new ObjectParameter("time1", typeof(System.DateTime));
    
            var time2Parameter = time2.HasValue ?
                new ObjectParameter("time2", time2) :
                new ObjectParameter("time2", typeof(System.DateTime));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Запрос1_Result>("Запрос1", id_adminParameter, id_statusParameter, time1Parameter, time2Parameter);
        }
    
        public virtual ObjectResult<Запрос2_Result> Запрос2(Nullable<int> id_user)
        {
            var id_userParameter = id_user.HasValue ?
                new ObjectParameter("id_user", id_user) :
                new ObjectParameter("id_user", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Запрос2_Result>("Запрос2", id_userParameter);
        }
    
       
    }
}
